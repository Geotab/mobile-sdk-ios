//
//  Module.swift
//  GeotabDriveSDK
//
//  Created by Yunfeng Liu on 2019-12-11.
//

import Foundation
import Mustache

/**
 Geotab Module base class
 */
open class Module: NSObject {
    static let geotabModules = "geotabModules"
    static let geotabNativeCallbacks = "___geotab_native_callbacks"
    static let callbackPrefix = "geotab_native_api_"
    static var templateRepo: TemplateRepository!
    /**
     Module's javascript name
     */
    public let name: String
    /**
     Functions that resides in this module in Javascript environment.
     */
    public var functions: [ModuleFunction] = []
    
    /**
     - Parameters:
        - name: String. Name of the module in Javascript environment.
     */
    public init(name: String) {
        self.name = name
    }
    
    /**
     Finding the module function of the given name.
     */
    public func findFunction(name: String) -> ModuleFunction? {
        return functions.first {moduleFunction in
            moduleFunction.name == name
        }
    }
    
    /**
     The javascript glue scripts that is going to be injected in WKWebview for communicating with this Module its contained ModuleFunctions. Should always add ontop of the scripts generated by super method.
     */
    open func scripts() -> String {
        let functionTemplate = try! Module.templateRepo.template(named: "Module.Script")
        let scriptData: [String: Any] = ["geotabModules": Module.geotabModules, "moduleName": name, "geotabNativeCallbacks": Module.geotabNativeCallbacks, "callbackPrefix": Module.callbackPrefix]
        var script = (try? functionTemplate.render(scriptData)) ?? ""
        for fun in functions {
            script += fun.scripts()
        }
        
        return script
    }
}

extension Module {
    public static func == (lhs: Module, rhs: Module) -> Bool {
        return lhs.name == rhs.name
    }
}
